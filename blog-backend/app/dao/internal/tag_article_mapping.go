// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// TagArticleMappingDao is the manager for logic model data accessing and custom defined data operations functions management.
type TagArticleMappingDao struct {
	gmvc.M                          // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	C      tagArticleMappingColumns // C is the short type for Columns, which contains all the column names of Table for convenient usage.
	DB     gdb.DB                   // DB is the raw underlying database management object.
	Table  string                   // Table is the underlying table name of the DAO.
}

// TagArticleMappingColumns defines and stores column names for table tag_article_mapping.
type tagArticleMappingColumns struct {
	Uid        string //
	TagUid     string //
	ArticleUid string //
	GmtCreate  string //
	GmtDeleted string //
}

// NewTagArticleMappingDao creates and returns a new DAO object for table data access.
func NewTagArticleMappingDao() *TagArticleMappingDao {
	columns := tagArticleMappingColumns{
		Uid:        "uid",
		TagUid:     "tag_uid",
		ArticleUid: "article_uid",
		GmtCreate:  "gmt_create",
		GmtDeleted: "gmt_deleted",
	}
	return &TagArticleMappingDao{
		C:     columns,
		M:     g.DB("default").Model("tag_article_mapping").Safe(),
		DB:    g.DB("default"),
		Table: "tag_article_mapping",
	}
}
