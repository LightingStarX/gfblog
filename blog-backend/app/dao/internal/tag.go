// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// TagDao is the manager for logic model data accessing and custom defined data operations functions management.
type TagDao struct {
	gmvc.M            // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	C      tagColumns // C is the short type for Columns, which contains all the column names of Table for convenient usage.
	DB     gdb.DB     // DB is the raw underlying database management object.
	Table  string     // Table is the underlying table name of the DAO.
}

// TagColumns defines and stores column names for table tag.
type tagColumns struct {
	Uid          string //
	TagName      string // 标签名称
	TotalArticle string // 该标签下的文章总数
	GmtCreate    string //
	GmtUpdate    string //
}

// NewTagDao creates and returns a new DAO object for table data access.
func NewTagDao() *TagDao {
	columns := tagColumns{
		Uid:          "uid",
		TagName:      "tag_name",
		TotalArticle: "total_article",
		GmtCreate:    "gmt_create",
		GmtUpdate:    "gmt_update",
	}
	return &TagDao{
		C:     columns,
		M:     g.DB("default").Model("tag").Safe(),
		DB:    g.DB("default"),
		Table: "tag",
	}
}
