// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// UserArticleMappingDao is the manager for logic model data accessing and custom defined data operations functions management.
type UserArticleMappingDao struct {
	gmvc.M                           // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	C      userArticleMappingColumns // C is the short type for Columns, which contains all the column names of Table for convenient usage.
	DB     gdb.DB                    // DB is the raw underlying database management object.
	Table  string                    // Table is the underlying table name of the DAO.
}

// UserArticleMappingColumns defines and stores column names for table user_article_mapping.
type userArticleMappingColumns struct {
	Uid        string //
	UserUid    string //
	ArticleUid string //
	GmtCreate  string //
	GmtUpdate  string //
}

// NewUserArticleMappingDao creates and returns a new DAO object for table data access.
func NewUserArticleMappingDao() *UserArticleMappingDao {
	columns := userArticleMappingColumns{
		Uid:        "uid",
		UserUid:    "user_uid",
		ArticleUid: "article_uid",
		GmtCreate:  "gmt_create",
		GmtUpdate:  "gmt_update",
	}
	return &UserArticleMappingDao{
		C:     columns,
		M:     g.DB("default").Model("user_article_mapping").Safe(),
		DB:    g.DB("default"),
		Table: "user_article_mapping",
	}
}
