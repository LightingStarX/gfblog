// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// UserProfileDao is the manager for logic model data accessing and custom defined data operations functions management.
type UserProfileDao struct {
	gmvc.M                    // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	C      userProfileColumns // C is the short type for Columns, which contains all the column names of Table for convenient usage.
	DB     gdb.DB             // DB is the raw underlying database management object.
	Table  string             // Table is the underlying table name of the DAO.
}

// UserProfileColumns defines and stores column names for table user_profile.
type userProfileColumns struct {
	Uid    string //
	Name   string //
	Desc   string //
	Qqchat string //
	Wechat string //
	Weibo  string //
	Bili   string //
	Email  string //
	Img    string //
	Avatar string //
}

// NewUserProfileDao creates and returns a new DAO object for table data access.
func NewUserProfileDao() *UserProfileDao {
	columns := userProfileColumns{
		Uid:    "uid",
		Name:   "name",
		Desc:   "desc",
		Qqchat: "qqchat",
		Wechat: "wechat",
		Weibo:  "weibo",
		Bili:   "bili",
		Email:  "email",
		Img:    "img",
		Avatar: "avatar",
	}
	return &UserProfileDao{
		C:     columns,
		M:     g.DB("default").Model("user_profile").Safe(),
		DB:    g.DB("default"),
		Table: "user_profile",
	}
}
